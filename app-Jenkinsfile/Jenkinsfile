pipeline {
    agent any

    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
	}
    stages {

      stage('Docker Login') {
            steps {
              sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }


      stage('Build & push Dockerfile (CI)') {
            steps {
		     
		   
              sh """
              cd Ansible-Playbooks
              ansible-playbook build-container.yml
              """
	    }
      }

      stage('Update-kubeconfig') {
            steps {
              
                  sh """
                  aws eks --region us-east-1 update-kubeconfig --name eks-cluster
                  """
                }
	    }
      }
        


      stage('Deploy the App (CD)') {
            steps {
                {

                  sh """
                  cd App-K8s
		  kubectl -n app apply -f deployment.yaml
                  kubectl -n app apply -f service.yaml
                  """
                 sleep(time: 10, unit: "SECONDS")
		}
	    }
                
      }
			//kubectl create namespace app

      stage('Return APP URL') {
          steps {
            
                sh "aws elb describe-load-balancers | grep DNSName"
              
          
       }
            }
       }

